		  
#Область СредняяЦенаНоменклатуры		  
		  
Функция ПолучитьДанныеСреднейЦеныНоменклатуры(ПараметрыЗапроса) Экспорт 
	
	ЗначениеВозврата = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса_ДанныеСреднейЦеныНоменклатуры(ПараметрыЗапроса);
	ИнициализироватьПараметрыЗапроса_ДанныеСреднейЦеныНоменклатуры(Запрос, ПараметрыЗапроса);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда 
		
		ЗначениеВозврата = РезультатЗапроса.Выгрузить();
		ЗначениеВозврата.Колонки.Добавить("НоменклатураГУИД", новый ОписаниеТипов("УникальныйИдентификатор")); 

		Для Каждого Стр Из ЗначениеВозврата Цикл
			
			СтавкаНДСНоменклатуры = Справочники.Номенклатура.СтавкаНДС(Стр.Номенклатура, КонецДня(ТекущаяДата()));
			СтавкаНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДСНоменклатуры, Ложь);
			
			Стр.НоменклатураГУИД = Стр.Номенклатура.УникальныйИдентификатор(); 
			Стр.СуммаСНДС = Стр.Сумма + УчетНДСКлиентСервер.РассчитатьСуммуНДС(Стр.Сумма, Ложь, СтавкаНДС);
			Стр.ЦенаСНДС = Стр.Цена + УчетНДСКлиентСервер.РассчитатьСуммуНДС(Стр.Цена, Ложь, СтавкаНДС);
			
		КонецЦикла;
		
	КонецЕсли;	
	
	Возврат ЗначениеВозврата;	
	
КонецФункции  

Функция ТекстЗапроса_ДанныеСреднейЦеныНоменклатуры(ПараметрыЗапроса) Экспорт
	
	Текст = "ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.Подразделение КАК Подразделение,
	|	ХозрасчетныйОстатки.Субконто1 КАК Склад,
	|	ХозрасчетныйОстатки.Субконто2 КАК Номенклатура,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК Сумма,
	|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
	|	ОКР(ВЫБОР
	|			КОГДА ХозрасчетныйОстатки.КоличествоОстаток <> 0
	|				ТОГДА ХозрасчетныйОстатки.СуммаОстаток / ХозрасчетныйОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ, 2) КАК Цена,
	|	""Стоимость на дату корректировки стоимости"" КАК ВидЦены,
	|		ВЫБОР
	|			КОГДА ХозрасчетныйОстатки.Валюта ЕСТЬ NULL
	|				ТОГДА &ВалютаРегламентированногоУчета
	|			ИНАЧЕ ХозрасчетныйОстатки.Валюта
	|		КОНЕЦ КАК Валюта
	|ПОМЕСТИТЬ ДанныеСреднейЦены
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ГраницаОтбораРегОпераций,
	|			Счет В ИЕРАРХИИ (&Счета),
	|			&Субконто,
	|			Организация = &Организация
	|				И ВЫБОР
	|					КОГДА &ОтборПоПодразделению
	|						ТОГДА Подразделение = &Подразделение
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА &ОтборПоСкладу
	|						ТОГДА Субконто1 = &Склад
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА &ОтборПоНоменклатуре
	|						ТОГДА Субконто2 В (&Номенклатура) 
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Организация,
	|	ХозрасчетныйОбороты.Счет,
	|	ХозрасчетныйОбороты.Подразделение,
	|	ХозрасчетныйОбороты.Субконто1,
	|	ХозрасчетныйОбороты.Субконто2,
	|	ХозрасчетныйОбороты.СуммаОборотДт,
	|	ХозрасчетныйОбороты.КоличествоОборотДт,
	|	ОКР(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КоличествоОборотДт <> 0
	|				ТОГДА ХозрасчетныйОбороты.СуммаОборотДт / ХозрасчетныйОбороты.КоличествоОборотДт
	|			ИНАЧЕ 0
	|		КОНЕЦ, 2),
	|	""Цена товара оборот"",
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.Валюта ЕСТЬ NULL
	|			ТОГДА &ВалютаРегламентированногоУчета
	|		ИНАЧЕ ХозрасчетныйОбороты.Валюта
	|	КОНЕЦ КАК Валюта
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ГраницаОтбораРегОпераций,
	|			&ОперативнаяГраницаУчета,
	|			,
	|			Счет В ИЕРАРХИИ (&Счета),
	|			&Субконто,
	|			Организация = &Организация
	|				И ВЫБОР
	|					КОГДА &ОтборПоПодразделению
	|						ТОГДА Подразделение = &Подразделение
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА &ОтборПоСкладу
	|						ТОГДА Субконто1 = &Склад
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА &ОтборПоНоменклатуре
	|						ТОГДА Субконто2 В (&Номенклатура)
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ,
	|			,
	|			) КАК ХозрасчетныйОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСреднейЦены.Номенклатура КАК Номенклатура, 
	|	ДанныеСреднейЦены.Валюта КАК Валюта,     
	|	ДанныеСреднейЦены.Валюта.Код КАК ВалютаКод,
	|	СУММА(ДанныеСреднейЦены.Сумма) КАК Сумма,
	|	СУММА(ДанныеСреднейЦены.Количество) КАК Количество,
	|	ОКР(ВЫБОР
	|			КОГДА СУММА(ДанныеСреднейЦены.Количество) <> 0
	|				ТОГДА СУММА(ДанныеСреднейЦены.Сумма) / СУММА(ДанныеСреднейЦены.Количество)
	|			ИНАЧЕ 0
	|		КОНЕЦ, 2) КАК Цена,
	|		0 КАК СуммаСНДС,
	|		0 КАК ЦенаСНДС
	|ИЗ
	|	ДанныеСреднейЦены КАК ДанныеСреднейЦены
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеСреднейЦены.Номенклатура, ДанныеСреднейЦены.Валюта";
	
	Возврат Текст;
	
КонецФункции

Функция ИнициализироватьПараметрыЗапроса_ДанныеСреднейЦеныНоменклатуры(Запрос, ПараметрыЗапроса) Экспорт 
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
		
	Запрос.УстановитьПараметр("Организация", Неопределено);
	Если ПараметрыЗапроса.Свойство("Организация")
			И ЗначениеЗаполнено(ПараметрыЗапроса.Организация) Тогда
		Запрос.УстановитьПараметр("Организация", ПараметрыЗапроса.Организация);	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОтборПоПодразделению", Ложь);
	Запрос.УстановитьПараметр("Подразделение", Неопределено);
	Если ПараметрыЗапроса.Свойство("Подразделение")
			И ЗначениеЗаполнено(ПараметрыЗапроса.Подразделение) Тогда
		Запрос.УстановитьПараметр("ОтборПоПодразделению", Истина);
		Запрос.УстановитьПараметр("Подразделение", ПараметрыЗапроса.Подразделение);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОтборПоСкладу", Ложь);
	Запрос.УстановитьПараметр("Склад", Неопределено);
    Если ПараметрыЗапроса.Свойство("Склад")
			И ЗначениеЗаполнено(ПараметрыЗапроса.Склад) Тогда
		Запрос.УстановитьПараметр("ОтборПоСкладу", Истина);
		Запрос.УстановитьПараметр("Склад", ПараметрыЗапроса.Склад);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОтборПоНоменклатуре", Ложь);
	Запрос.УстановитьПараметр("Номенклатура", Новый Массив);
    Если ПараметрыЗапроса.Свойство("Номенклатура")
			И ПараметрыЗапроса.Номенклатура.Количество() <> 0 Тогда
		Запрос.УстановитьПараметр("ОтборПоНоменклатуре", Истина);
		Запрос.УстановитьПараметр("Номенклатура", ПараметрыЗапроса.Номенклатура);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОперативнаяГраницаУчета", ТекущаяДата());
	Если ПараметрыЗапроса.Свойство("Период") Тогда
		Запрос.УстановитьПараметр("ОперативнаяГраницаУчета", новый Граница(ПараметрыЗапроса.Период, ВидГраницы.Включая));
	КонецЕсли;
	
	ГраницаОтбораРегОпераций = ПолучитьГраницуОтбораРегОпераций(ПараметрыЗапроса);
	Запрос.УстановитьПараметр("ГраницаОтбораРегОпераций", новый Граница(ГраницаОтбораРегОпераций, ВидГраницы.Включая));
	
	Субконто = Новый Массив;
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("Субконто", Субконто);
	
	Счета = Новый Массив;
	Счета.Добавить(ПланыСчетов.Хозрасчетный.Товары);
	Запрос.УстановитьПараметр("Счета", Счета);
	
КонецФункции

Функция ПолучитьГраницуОтбораРегОпераций(ПараметрыЗапроса) Экспорт
	
	ЗначениеВозврата = ТекущаяДата();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	РегОп.Дата КАК Дата,
	|	РегОп.Организация КАК Организация
	|ПОМЕСТИТЬ ОтборРегОпКорректировкаСтоимости
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегОп
	|ГДЕ РегОп.Организация = &Организация
	|	И РегОп.Дата >= &ГраницаОтбораРегОпераций
	|	И РегОп.ПометкаУдаления = ЛОЖЬ
	|	И РегОп.ВидОперации = &ВидОперацииКорректировкаСтоимости
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(&ГраницаОтбораРегОпераций, МЕСЯЦ),
	|	Спр.Ссылка
	|ИЗ
	|	Справочник.Организации КАК Спр
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отбор.Организация КАК Организация,
	|	МАКСИМУМ(Отбор.Дата) КАК Дата
	|
	|ИЗ
	|	ОтборРегОпКорректировкаСтоимости КАК Отбор
	|
	|СГРУППИРОВАТЬ ПО
	|	Отбор.Организация";   
	//             
	Организация = Неопределено;
	ПараметрыЗапроса.Свойство("Организация", Организация);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ГраницаОтбораРегОпераций = ТекущаяДата();
	Если ПараметрыЗапроса.Свойство("Период") Тогда
		ГраницаОтбораРегОпераций = ПараметрыЗапроса.Период - 60*60*24*180;		
	КонецЕсли;
	Запрос.УстановитьПараметр("ГраницаОтбораРегОпераций", ГраницаОтбораРегОпераций);
	
	ВидОперацииКорректировкаСтоимости = Перечисления.ВидыРегламентныхОпераций.КорректировкаСтоимостиНоменклатуры;
	Запрос.УстановитьПараметр("ВидОперацииКорректировкаСтоимости", ВидОперацииКорректировкаСтоимости); 	
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗначениеВозврата = Выборка.Дата;	
	КонецЦикла;
	
	Возврат ЗначениеВозврата;
	
КонецФункции

#КонецОбласти